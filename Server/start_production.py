#!/usr/bin/env python3
"""
üöÄ –ó–ê–ü–£–°–ö PRODUCTION –°–ï–†–í–ï–†–ê
"""

import sys
from pathlib import Path

print("=" * 70)
print("üöÄ LDPlayer Management System - Production Server")
print("=" * 70)
print()

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
print("üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")
try:
    import uvicorn
    print("   ‚úÖ uvicorn")
except ImportError:
    print("   ‚ùå uvicorn –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    print("   –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install uvicorn")
    sys.exit(1)

try:
    import fastapi
    print("   ‚úÖ fastapi")
except ImportError:
    print("   ‚ùå fastapi –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    print("   –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install fastapi")
    sys.exit(1)

try:
    import pydantic
    print("   ‚úÖ pydantic")
except ImportError:
    print("   ‚ùå pydantic –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    print("   –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install pydantic")
    sys.exit(1)

print()
print("=" * 70)
print("üéØ –ß–¢–û –ë–£–î–ï–¢ –î–û–°–¢–£–ü–ù–û:")
print("=" * 70)
print()
print("üìã API Endpoints:")
print("   ‚Ä¢ Health: /api/health, /api/status, /api/version")
print("   ‚Ä¢ Workstations: CRUD + test-connection + system-info (7 endpoints)")
print("   ‚Ä¢ Emulators: create, start, stop, delete, modify (9+ endpoints)")
print("   ‚Ä¢ Operations: get, cancel, statistics (6 endpoints)")
print("   ‚Ä¢ WebSocket: /ws/monitor")
print()
print("üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:")
print("   ‚Ä¢ Swagger UI: http://localhost:8000/docs")
print("   ‚Ä¢ ReDoc: http://localhost:8000/redoc")
print("   ‚Ä¢ OpenAPI: http://localhost:8000/openapi.json")
print()
print("üîß –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:")
print("   ‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ —ç–º—É–ª—è—Ç–æ—Ä–æ–≤ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏")
print("   ‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏–µ 14 –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ (CPU, RAM, —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ, IMEI, MAC, –∏ –¥—Ä.)")
print("   ‚úÖ –ó–∞–ø—É—Å–∫/–æ—Å—Ç–∞–Ω–æ–≤–∫–∞ —ç–º—É–ª—è—Ç–æ—Ä–æ–≤")
print("   ‚úÖ –£–¥–∞–ª–µ–Ω–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ WinRM/SMB")
print("   ‚úÖ Real-time –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ WebSocket")
print("   ‚úÖ –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –æ–ø–µ—Ä–∞—Ü–∏–π")
print()
print("=" * 70)
print()

# –í–∞—Ä–∏–∞–Ω—Ç—ã –∑–∞–ø—É—Å–∫–∞
print("üéÆ –í–ê–†–ò–ê–ù–¢–´ –î–ï–ô–°–¢–í–ò–ô:")
print()
print("1Ô∏è‚É£  –ó–∞–ø—É—Å—Ç–∏—Ç—å API —Å–µ—Ä–≤–µ—Ä –∏ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —á–µ—Ä–µ–∑ Swagger UI")
print("2Ô∏è‚É£  –°–æ–∑–¥–∞—Ç—å JWT –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é")
print("3Ô∏è‚É£  –°–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Å—Ç–æ–π Web UI (HTML + JavaScript)")
print("4Ô∏è‚É£  –ù–∞–ø–∏—Å–∞—Ç—å unit —Ç–µ—Å—Ç—ã —Å pytest")
print("5Ô∏è‚É£  –ó–∞–ø—É—Å—Ç–∏—Ç—å –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç")
print()

choice = input("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ (1-5) –∏–ª–∏ Enter –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: ").strip()

if not choice or choice == "1":
    print()
    print("=" * 70)
    print("üöÄ –ó–ê–ü–£–°–ö –°–ï–†–í–ï–†–ê...")
    print("=" * 70)
    print()
    print("üì° –°–µ—Ä–≤–µ—Ä –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞: http://localhost:8000")
    print("üìö Swagger UI: http://localhost:8000/docs")
    print()
    print("‚ö†Ô∏è  –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
    print()
    print("=" * 70)
    print()
    
    # –ó–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ uvicorn
    try:
        uvicorn.run(
            "src.core.server_modular:app",
            host="0.0.0.0",
            port=8000,
            reload=True,
            log_level="info"
        )
    except KeyboardInterrupt:
        print("\n\n‚úÖ –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

elif choice == "2":
    print("\nüîê –†–µ–∞–ª–∏–∑–∞—Ü–∏—è JWT –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏...")
    print("–°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –¥–ª—è JWT auth...")
    
elif choice == "3":
    print("\nüåê –°–æ–∑–¥–∞–Ω–∏–µ Web UI...")
    print("–ì–µ–Ω–µ—Ä–∞—Ü–∏—è HTML –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞...")
    
elif choice == "4":
    print("\nüß™ –°–æ–∑–¥–∞–Ω–∏–µ unit —Ç–µ—Å—Ç–æ–≤...")
    print("–ù–∞—Å—Ç—Ä–æ–π–∫–∞ pytest –∏ —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤...")
    
elif choice == "5":
    print("\nüé¨ –ó–∞–ø—É—Å–∫ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏...")
    import subprocess
    subprocess.run([sys.executable, "demo.py"])
    
else:
    print("\n‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä")
    sys.exit(1)
