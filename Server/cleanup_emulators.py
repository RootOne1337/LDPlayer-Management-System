#!/usr/bin/env python3
"""
–û—á–∏—Å—Ç–∫–∞ —ç–º—É–ª—è—Ç–æ—Ä–æ–≤: –æ—Å—Ç–∞–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ 0 –∏ 1, –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å 1 –≤ nifilim.
"""

import subprocess
import time

ldconsole = r"C:\LDPlayer\LDPlayer9\ldconsole.exe"

print("üßπ –û–ß–ò–°–¢–ö–ê –≠–ú–£–õ–Ø–¢–û–†–û–í")
print("=" * 70)

# –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫
print("\nüìã –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —ç–º—É–ª—è—Ç–æ—Ä–æ–≤...")
result = subprocess.run(
    [ldconsole, "list2"],
    capture_output=True,
    text=True,
    timeout=30
)

if result.returncode != 0:
    print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞")
    exit(1)

# –ü–∞—Ä—Å–∏–Ω–≥
emulators = []
for line in result.stdout.strip().split('\n'):
    if ',' in line:
        parts = line.split(',')
        if len(parts) >= 2:
            emulators.append({
                'index': int(parts[0]),
                'name': parts[1]
            })

print(f"–ù–∞–π–¥–µ–Ω–æ —ç–º—É–ª—è—Ç–æ—Ä–æ–≤: {len(emulators)}\n")

for emu in emulators:
    print(f"   {emu['index']}. {emu['name']}")

# –£–¥–∞–ª–∏—Ç—å –≤—Å–µ, –∫—Ä–æ–º–µ 0 –∏ 1
print(f"\n{'=' * 70}")
print("üóëÔ∏è –£–î–ê–õ–ï–ù–ò–ï –õ–ò–®–ù–ò–• –≠–ú–£–õ–Ø–¢–û–†–û–í")
print(f"{'=' * 70}\n")

keep_indices = {0, 1}
deleted_count = 0

for emu in emulators:
    if emu['index'] not in keep_indices:
        print(f"–£–¥–∞–ª–µ–Ω–∏–µ: {emu['index']}. {emu['name']}")
        
        result_remove = subprocess.run(
            [ldconsole, "remove", "--index", str(emu['index'])],
            capture_output=True,
            text=True,
            timeout=60
        )
        
        if result_remove.returncode == 0:
            print(f"   ‚úÖ –£–¥–∞–ª–µ–Ω")
            deleted_count += 1
        else:
            print(f"   ‚ö†Ô∏è –ö–æ–¥ –≤–æ–∑–≤—Ä–∞—Ç–∞: {result_remove.returncode}")
        
        time.sleep(0.5)  # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞

print(f"\n‚úÖ –£–¥–∞–ª–µ–Ω–æ —ç–º—É–ª—è—Ç–æ—Ä–æ–≤: {deleted_count}")

# –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å —ç–º—É–ª—è—Ç–æ—Ä —Å –∏–Ω–¥–µ–∫—Å–æ–º 1 –≤ "nifilim"
print(f"\n{'=' * 70}")
print("‚úèÔ∏è –ü–ï–†–ï–ò–ú–ï–ù–û–í–ê–ù–ò–ï –≠–ú–£–õ–Ø–¢–û–†–ê")
print(f"{'=' * 70}\n")

# –ù–∞–π—Ç–∏ —ç–º—É–ª—è—Ç–æ—Ä —Å –∏–Ω–¥–µ–∫—Å–æ–º 1
print("–ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —ç–º—É–ª—è—Ç–æ—Ä–∞ —Å –∏–Ω–¥–µ–∫—Å–æ–º 1 –≤ 'nifilim'...")

result_rename = subprocess.run(
    [ldconsole, "rename", "--index", "1", "--title", "nifilim"],
    capture_output=True,
    text=True,
    timeout=30
)

if result_rename.returncode == 0:
    print("‚úÖ –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–æ —É—Å–ø–µ—à–Ω–æ")
else:
    print(f"‚ö†Ô∏è –ö–æ–¥ –≤–æ–∑–≤—Ä–∞—Ç–∞: {result_rename.returncode}")
    print(f"STDERR: {result_rename.stderr}")

# –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
print(f"\n{'=' * 70}")
print("üìã –§–ò–ù–ê–õ–¨–ù–´–ô –°–ü–ò–°–û–ö")
print(f"{'=' * 70}\n")

time.sleep(1)

result_final = subprocess.run(
    [ldconsole, "list2"],
    capture_output=True,
    text=True,
    timeout=30
)

final_emulators = []
for line in result_final.stdout.strip().split('\n'):
    if ',' in line:
        parts = line.split(',')
        if len(parts) >= 2:
            index = parts[0]
            name = parts[1]
            print(f"   {index}. {name}")
            final_emulators.append(name)

print(f"\n{'=' * 70}")
print("‚úÖ –ì–û–¢–û–í–û!")
print(f"{'=' * 70}")

if 'nifilim' in final_emulators:
    print("\n‚úÖ –≠–º—É–ª—è—Ç–æ—Ä 'nifilim' –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ!")
else:
    print("\n‚ö†Ô∏è –≠–º—É–ª—è—Ç–æ—Ä 'nifilim' –Ω–µ –Ω–∞–π–¥–µ–Ω")

print(f"\n–í—Å–µ–≥–æ —ç–º—É–ª—è—Ç–æ—Ä–æ–≤ –æ—Å—Ç–∞–ª–æ—Å—å: {len(final_emulators)}")
