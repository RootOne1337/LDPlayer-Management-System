#!/usr/bin/env python3
"""–ü–æ–ª–Ω–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è LDPlayer Management System API"""

import requests
import json
import time

BASE = 'http://localhost:8000/api'

print('\n' + '='*80)
print('üéØ LDPlayer Management System - –ü–û–õ–ù–ê–Ø –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø')
print('='*80)

# –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ –≤ —Å–ª—É—á–∞–µ –µ—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –µ—â—ë –Ω–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –≥–æ—Ç–æ–≤
MAX_RETRIES = 5
for attempt in range(MAX_RETRIES):
    try:
        print(f'\n[{attempt+1}/{MAX_RETRIES}] –ñ–¥—ë–º —Å–µ—Ä–≤–µ—Ä...')
        health = requests.get(f'{BASE}/health', timeout=2)
        if health.status_code == 200:
            print('‚úÖ –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω!')
            break
    except:
        if attempt < MAX_RETRIES - 1:
            print(f'   ‚è≥ –°–µ—Ä–≤–µ—Ä –Ω–µ –≥–æ—Ç–æ–≤, –∂–¥—É 2 —Å–µ–∫...')
            time.sleep(2)
        else:
            print('‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è!')
            exit(1)

# ==================================================================
# 1. –õ–û–ì–ò–†–û–í–ê–ù–ò–ï
# ==================================================================
print('\n' + '‚îÄ'*80)
print('1Ô∏è‚É£  –õ–û–ì–ò–†–û–í–ê–ù–ò–ï (JWT)')
print('‚îÄ'*80)

try:
    login_resp = requests.post(
        f'{BASE}/auth/login',
        json={'username': 'admin', 'password': 'admin'},
        timeout=5
    )
    
    if login_resp.status_code == 200:
        token_data = login_resp.json()
        token = token_data.get('access_token', '')
        print(f'‚úÖ –õ–æ–≥–∏–Ω —É—Å–ø–µ—à–Ω—ã–π!')
        print(f'   Token: {token[:30]}...')
        print(f'   Type: {token_data.get("token_type", "Bearer")}')
        print(f'   User: {token_data.get("user", {}).get("username", "?")}')
        
        headers = {'Authorization': f'Bearer {token}'}
        
        # ==================================================================
        # 2. –ü–†–û–í–ï–†–ö–ê –ó–î–û–†–û–í–¨–Ø
        # ==================================================================
        print('\n' + '‚îÄ'*80)
        print('2Ô∏è‚É£  –ó–î–û–†–û–í–¨–ï –°–ò–°–¢–ï–ú–´')
        print('‚îÄ'*80)
        
        health_resp = requests.get(f'{BASE}/health', headers=headers, timeout=5)
        if health_resp.status_code == 200:
            health_data = health_resp.json()
            print(f'‚úÖ –°–∏—Å—Ç–µ–º–∞ –∑–¥–æ—Ä–æ–≤–∞!')
            print(f'   Status: {health_data.get("data", {}).get("status", "?")}')
        
        # ==================================================================
        # 3. –≠–ú–£–õ–Ø–¢–û–†–´
        # ==================================================================
        print('\n' + '‚îÄ'*80)
        print('3Ô∏è‚É£  –≠–ú–£–õ–Ø–¢–û–†–´')
        print('‚îÄ'*80)
        
        emul_resp = requests.get(
            f'{BASE}/emulators?skip=0&limit=100',
            headers=headers,
            timeout=5
        )
        
        if emul_resp.status_code == 200:
            emul_data = emul_resp.json()
            total = emul_data.get('pagination', {}).get('total', 0)
            print(f'‚úÖ –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ —ç–º—É–ª—è—Ç–æ—Ä–æ–≤!')
            print(f'   –í—Å–µ–≥–æ: {total}')
            print(f'   –ù–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ: {len(emul_data.get("data", []))}')
            
            if emul_data.get('data'):
                print(f'\n   üì± –°–ø–∏—Å–æ–∫ —ç–º—É–ª—è—Ç–æ—Ä–æ–≤:\n')
                for i, emul in enumerate(emul_data['data'][:5], 1):
                    status = emul.get('status', '?')
                    icon = '‚ñ∂Ô∏è ' if status == 'running' else '‚è∏Ô∏è '
                    print(f'      {i}. {icon}{emul.get("name", "?")}')
                    print(f'         ID: {emul.get("id", "?")}')
                    print(f'         –°—Ç–∞–Ω—Ü–∏—è: {emul.get("workstation_id", "?")}')
                    print(f'         –°—Ç–∞—Ç—É—Å: {status}')
        
        # ==================================================================
        # 4. –†–ê–ë–û–ß–ò–ï –°–¢–ê–ù–¶–ò–ò
        # ==================================================================
        print('\n' + '‚îÄ'*80)
        print('4Ô∏è‚É£  –†–ê–ë–û–ß–ò–ï –°–¢–ê–ù–¶–ò–ò')
        print('‚îÄ'*80)
        
        ws_resp = requests.get(
            f'{BASE}/workstations',
            headers=headers,
            timeout=5
        )
        
        if ws_resp.status_code == 200:
            ws_data = ws_resp.json()
            ws_list = ws_data.get('data', [])
            print(f'‚úÖ –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ —Ä–∞–±–æ—á–∏—Ö —Å—Ç–∞–Ω—Ü–∏–π!')
            print(f'   –í—Å–µ–≥–æ: {len(ws_list)}')
            
            if ws_list:
                print(f'\n   üñ•Ô∏è  –°–ø–∏—Å–æ–∫ —Å—Ç–∞–Ω—Ü–∏–π:\n')
                for i, ws in enumerate(ws_list[:5], 1):
                    print(f'      {i}. {ws.get("name", "?")}')
                    print(f'         ID: {ws.get("id", "?")}')
                    print(f'         Host: {ws.get("host", "?")}')
    else:
        print(f'‚ùå –û—à–∏–±–∫–∞ –ª–æ–≥–∏–Ω–∞: {login_resp.status_code}')
        print(f'   {login_resp.text[:200]}')
        
except Exception as e:
    print(f'‚ùå –û—à–∏–±–∫–∞: {e}')

print('\n' + '='*80)
print('‚ú® –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê')
print('='*80 + '\n')
