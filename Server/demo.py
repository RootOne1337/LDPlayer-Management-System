#!/usr/bin/env python3
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è LDPlayer Management System.

–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞ –∏ API endpoints.
"""

import sys
import json
from pathlib import Path

# –î–æ–±–∞–≤–∏—Ç—å –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –≤ PYTHONPATH
root_dir = Path(__file__).parent
sys.path.insert(0, str(root_dir))

try:
    from src.core.config import get_config
    from src.core.server import app
    from src.utils.logger import get_logger, LogCategory, LogLevel
    from src.utils.config_manager import get_config_manager
    from src.utils.backup_manager import get_backup_manager
except ImportError as e:
    print(f"–û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π: {e}")
    print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
    sys.exit(1)


def demo_system():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã."""
    print("üöÄ LDPLAYER MANAGEMENT SYSTEM DEMO")
    print("=" * 50)

    # 1. –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã
    print("\nüìã 1. –°–ò–°–¢–ï–ú–ù–ê–Ø –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø")
    print("-" * 30)

    config = get_config()
    print(f"–°–µ—Ä–≤–µ—Ä: {config.server.host}:{config.server.port}")
    print(f"WebSocket: –ø–æ—Ä—Ç {config.server.websocket_port}")
    print(f"–†–∞–±–æ—á–∏—Ö —Å—Ç–∞–Ω—Ü–∏–π: {len(config.workstations)}")
    print(f"–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π: {config.configs_dir}")
    print(f"–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ª–æ–≥–æ–≤: {config.logs_dir}")

    # 2. –†–∞–±–æ—á–∏–µ —Å—Ç–∞–Ω—Ü–∏–∏
    print("\nüè≠ 2. –ù–ê–°–¢–†–û–ï–ù–ù–´–ï –†–ê–ë–û–ß–ò–ï –°–¢–ê–ù–¶–ò–ò")
    print("-" * 30)

    for i, ws in enumerate(config.workstations[:3], 1):
        print(f"{i}. {ws.name}")
        print(f"   IP: {ws.ip_address}")
        print(f"   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {ws.username}")
        print(f"   LDPlayer –ø—É—Ç—å: {ws.ldplayer_path}")
        print(f"   –°—Ç–∞—Ç—É—Å: {ws.status}")
        print()

    # 3. API endpoints
    print("üåê 3. –î–û–°–¢–£–ü–ù–´–ï API ENDPOINTS")
    print("-" * 30)

    api_routes = [route for route in app.routes if hasattr(route, 'path') and route.path.startswith('/api')]

    for route in api_routes[:10]:
        methods = ', '.join(route.methods) if route.methods else 'ANY'
        print(f"  {methods:20} {route.path}")

    print(f"\n–í—Å–µ–≥–æ API –º–∞—Ä—à—Ä—É—Ç–æ–≤: {len(api_routes)}")

    # 4. –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —ç–º—É–ª—è—Ç–æ—Ä–æ–≤
    print("\n‚öôÔ∏è 4. –°–ò–°–¢–ï–ú–ê –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ô")
    print("-" * 30)

    config_manager = get_config_manager()
    configs = config_manager.list_configs()

    print(f"–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π —ç–º—É–ª—è—Ç–æ—Ä–æ–≤: {len(configs)}")

    if configs:
        print("–ü—Ä–∏–º–µ—Ä—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π:")
        for config_info in configs[:3]:
            print(f"  - {config_info['config_name']} ({config_info['size']} bytes)")

    # 5. –°–∏—Å—Ç–µ–º–∞ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
    print("\nüíæ 5. –°–ò–°–¢–ï–ú–ê –†–ï–ó–ï–†–í–ù–û–ì–û –ö–û–ü–ò–†–û–í–ê–ù–ò–Ø")
    print("-" * 30)

    backup_manager = get_backup_manager()
    backups = backup_manager.list_backups()

    print(f"–†–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π: {len(backups)}")

    if backups:
        print("–ü–æ—Å–ª–µ–¥–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏:")
        for backup in backups[:3]:
            print(f"  - {backup['name']} ({backup['size_mb']} MB)")
            print(f"    –°–æ–∑–¥–∞–Ω–æ: {backup['created_at']}")

    # 6. –°–∏—Å—Ç–µ–º–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    print("\nüìù 6. –°–ò–°–¢–ï–ú–ê –õ–û–ì–ò–†–û–í–ê–ù–ò–Ø")
    print("-" * 30)

    logger = get_logger(LogCategory.SYSTEM)
    logger.log_system_event("–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è", {"demo": True}, LogLevel.INFO)
    print("–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")

    # 7. –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
    print("\nüõ°Ô∏è 7. –û–ë–†–ê–ë–û–¢–ß–ò–ö –û–®–ò–ë–û–ö")
    print("-" * 30)

    from src.utils.error_handler import get_error_handler
    error_handler = get_error_handler()
    stats = error_handler.get_error_stats()

    print(f"–û—à–∏–±–æ–∫ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π —á–∞—Å: {stats['errors_last_hour']}")
    print(f"–ê–∫—Ç–∏–≤–Ω—ã—Ö circuit breakers: {stats['circuit_breakers_active']}")

    # 8. –ò—Ç–æ–≥–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    print("\nüìä 8. –ò–¢–û–ì–û–í–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø")
    print("-" * 30)

    print("‚úÖ –°–µ—Ä–≤–µ—Ä–Ω–∞—è —á–∞—Å—Ç—å –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ")
    print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
    print("‚úÖ API —Å–µ—Ä–≤–µ—Ä —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É–µ—Ç")
    print("‚úÖ –°–∏—Å—Ç–µ–º–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–∞")
    print("‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
    print("‚úÖ –ú–µ–Ω–µ–¥–∂–µ—Ä –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π —Ä–∞–±–æ—Ç–∞–µ—Ç")
    print(f"\nüåü –ì–æ—Ç–æ–≤–æ –∫ —Å–æ–∑–¥–∞–Ω–∏—é WPF –∫–ª–∏–µ–Ω—Ç–∞!")
    print(f"üìñ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è API: http://localhost:{config.server.port}/docs")
    print(f"üîó –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: LDPlayerManagementSystem/")

    print(f"\n{'=' * 50}")
    print("üéØ –°–ª–µ–¥—É—é—â–∏–π —ç—Ç–∞–ø: WPF –∫–ª–∏–µ–Ω—Ç —Å –∫—Ä–∞—Å–∏–≤—ã–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º")
    print("=" * 50)


if __name__ == "__main__":
    demo_system()