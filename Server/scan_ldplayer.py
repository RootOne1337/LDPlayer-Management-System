#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø–æ–∏—Å–∫–∞ —ç–º—É–ª—è—Ç–æ—Ä–æ–≤ LDPlayer.
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ª–æ–∫–∞–ª—å–Ω—É—é —É—Å—Ç–∞–Ω–æ–≤–∫—É LDPlayer –∏ —Å–ø–∏—Å–æ–∫ —ç–º—É–ª—è—Ç–æ—Ä–æ–≤.
"""

import os
import subprocess
import sys
from pathlib import Path

# –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—É—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ LDPlayer
LDPLAYER_PATHS = [
    r"C:\LDPlayer\LDPlayer9.0",
    r"C:\LDPlayer\LDPlayer9",
    r"C:\LDPlayer\LDPlayer4.0",
    r"C:\LDPlayer\LDPlayer4",
    r"C:\LDPlayer",
    r"D:\LDPlayer\LDPlayer9.0",
    r"D:\LDPlayer\LDPlayer9",
    r"C:\Program Files\LDPlayer",
    r"C:\Program Files (x86)\LDPlayer",
]

def find_ldplayer():
    """–ù–∞–π—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–∫—É LDPlayer –Ω–∞ –ª–æ–∫–∞–ª—å–Ω–æ–π –º–∞—à–∏–Ω–µ."""
    print("üîç –ü–û–ò–°–ö –£–°–¢–ê–ù–û–í–ö–ò LDPLAYER")
    print("=" * 60)
    
    found_paths = []
    
    for path in LDPLAYER_PATHS:
        ldplayer_dir = Path(path)
        if ldplayer_dir.exists():
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {path}")
            
            # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞–ª–∏—á–∏–µ ldconsole.exe
            ldconsole = ldplayer_dir / "ldconsole.exe"
            if ldconsole.exists():
                print(f"   ‚úÖ ldconsole.exe –Ω–∞–π–¥–µ–Ω")
                found_paths.append((ldplayer_dir, ldconsole))
            else:
                print(f"   ‚ö†Ô∏è ldconsole.exe –Ω–µ –Ω–∞–π–¥–µ–Ω")
        else:
            print(f"‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–∞: {path}")
    
    return found_paths


def test_ldconsole(ldconsole_path):
    """–ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å ldconsole.exe."""
    print(f"\nüì° –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï LDCONSOLE")
    print("=" * 60)
    print(f"–ü—É—Ç—å: {ldconsole_path}")
    
    try:
        # –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É list
        result = subprocess.run(
            [str(ldconsole_path), "list"],
            capture_output=True,
            text=True,
            timeout=10
        )
        
        print(f"\n–í—ã—Ö–æ–¥ –∫–æ–º–∞–Ω–¥—ã (–∫–æ–¥: {result.returncode}):")
        print("-" * 60)
        
        if result.stdout:
            print("STDOUT:")
            print(result.stdout)
        
        if result.stderr:
            print("\nSTDERR:")
            print(result.stderr)
        
        # –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å –≤—ã–≤–æ–¥
        if result.returncode == 0 and result.stdout:
            print("\nüìä –ü–ê–†–°–ò–ù–ì –†–ï–ó–£–õ–¨–¢–ê–¢–ê:")
            print("-" * 60)
            
            lines = result.stdout.strip().split('\n')
            print(f"–í—Å–µ–≥–æ —Å—Ç—Ä–æ–∫: {len(lines)}")
            
            emulator_count = 0
            for i, line in enumerate(lines):
                if i == 0:
                    print(f"–ó–∞–≥–æ–ª–æ–≤–æ–∫: {line}")
                elif line.strip():
                    print(f"–≠–º—É–ª—è—Ç–æ—Ä {emulator_count + 1}: {line}")
                    emulator_count += 1
            
            print(f"\n‚úÖ –ù–∞–π–¥–µ–Ω–æ —ç–º—É–ª—è—Ç–æ—Ä–æ–≤: {emulator_count}")
            return emulator_count
        else:
            print("‚ö†Ô∏è –ö–æ–º–∞–Ω–¥–∞ –≤–µ—Ä–Ω—É–ª–∞ –æ—à–∏–±–∫—É –∏–ª–∏ –ø—É—Å—Ç–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç")
            return 0
            
    except subprocess.TimeoutExpired:
        print("‚ùå –¢–∞–π–º–∞—É—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã (10 —Å–µ–∫)")
        return 0
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return 0


def test_ldconsole_version(ldconsole_path):
    """–ü–æ–ª—É—á–∏—Ç—å –≤–µ—Ä—Å–∏—é LDPlayer."""
    print(f"\nüìã –í–ï–†–°–ò–Ø LDPLAYER")
    print("=" * 60)
    
    try:
        # –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –ø–æ–ª—É—á–∏—Ç—å –≤–µ—Ä—Å–∏—é
        result = subprocess.run(
            [str(ldconsole_path), "version"],
            capture_output=True,
            text=True,
            timeout=5
        )
        
        if result.stdout:
            print(f"–í–µ—Ä—Å–∏—è: {result.stdout.strip()}")
        else:
            print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –≤–µ—Ä—Å–∏—é")
            
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –≤–µ—Ä—Å–∏–∏: {e}")


def test_running_emulators(ldconsole_path):
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–∞–ø—É—â–µ–Ω–Ω—ã–µ —ç–º—É–ª—è—Ç–æ—Ä—ã."""
    print(f"\nüöÄ –ó–ê–ü–£–©–ï–ù–ù–´–ï –≠–ú–£–õ–Ø–¢–û–†–´")
    print("=" * 60)
    
    try:
        result = subprocess.run(
            [str(ldconsole_path), "runninglist"],
            capture_output=True,
            text=True,
            timeout=10
        )
        
        if result.returncode == 0 and result.stdout:
            lines = result.stdout.strip().split('\n')
            running_count = len([line for line in lines[1:] if line.strip()])
            print(f"‚úÖ –ó–∞–ø—É—â–µ–Ω–æ —ç–º—É–ª—è—Ç–æ—Ä–æ–≤: {running_count}")
            
            if running_count > 0:
                print("\n–°–ø–∏—Å–æ–∫:")
                for line in lines[1:]:
                    if line.strip():
                        print(f"  - {line}")
        else:
            print("‚ö†Ô∏è –ù–µ—Ç –∑–∞–ø—É—â–µ–Ω–Ω—ã—Ö —ç–º—É–ª—è—Ç–æ—Ä–æ–≤")
            
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {e}")


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è."""
    print("üéÆ LDPlayer Emulator Scanner")
    print("=" * 60)
    print()
    
    # –ù–∞–π—Ç–∏ LDPlayer
    found_installations = find_ldplayer()
    
    if not found_installations:
        print("\n" + "=" * 60)
        print("‚ùå LDPlayer –ù–ï –ù–ê–ô–î–ï–ù –Ω–∞ —ç—Ç–æ–π –º–∞—à–∏–Ω–µ")
        print("=" * 60)
        print("\n–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
        print("1. LDPlayer –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        print("2. –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ –¥—Ä—É–≥—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é")
        print("3. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥—Ä—É–≥–∞—è –≤–µ—Ä—Å–∏—è")
        print("\n–î–ª—è —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã –Ω—É–∂–Ω–æ:")
        print("- –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å LDPlayer 9 –∏–ª–∏ —É–∫–∞–∑–∞—Ç—å –ø—É—Ç—å –≤ config.json")
        print("- –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —É–¥–∞–ª–µ–Ω–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å—Ç–∞–Ω—Ü–∏—è–º —Å LDPlayer")
        return
    
    print("\n" + "=" * 60)
    print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–æ–∫ LDPlayer: {len(found_installations)}")
    print("=" * 60)
    
    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–∞–∂–¥—É—é –Ω–∞–π–¥–µ–Ω–Ω—É—é —É—Å—Ç–∞–Ω–æ–≤–∫—É
    for ldplayer_dir, ldconsole_path in found_installations:
        print(f"\n\nüîß –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï: {ldplayer_dir}")
        print("=" * 60)
        
        # –í–µ—Ä—Å–∏—è
        test_ldconsole_version(ldconsole_path)
        
        # –°–ø–∏—Å–æ–∫ —ç–º—É–ª—è—Ç–æ—Ä–æ–≤
        emulator_count = test_ldconsole(ldconsole_path)
        
        # –ó–∞–ø—É—â–µ–Ω–Ω—ã–µ —ç–º—É–ª—è—Ç–æ—Ä—ã
        test_running_emulators(ldconsole_path)
        
        if emulator_count > 0:
            print("\n" + "=" * 60)
            print("‚úÖ –≠–ú–£–õ–Ø–¢–û–†–´ –ù–ê–ô–î–ï–ù–´! –°–∏—Å—Ç–µ–º–∞ –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Å –Ω–∏–º–∏!")
            print("=" * 60)
        else:
            print("\n" + "=" * 60)
            print("‚ö†Ô∏è –≠–º—É–ª—è—Ç–æ—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –°–æ–∑–¥–∞–π—Ç–µ –∏—Ö —á–µ—Ä–µ–∑ LDPlayer –∏–ª–∏ ldconsole")
            print("=" * 60)


if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print("\n\n‚ö†Ô∏è –ü—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        sys.exit(0)
    except Exception as e:
        print(f"\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        sys.exit(1)
