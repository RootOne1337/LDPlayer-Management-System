# üöÄ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ LDPlayer Management System
# –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç –æ–±–∞ —Å–µ—Ä–≤–µ—Ä–∞ (backend + frontend) –≤ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –æ–∫–Ω–∞—Ö

Write-Host "`n" -NoNewline
Write-Host "================================================================================================" -ForegroundColor Cyan
Write-Host "  üéÆ LDPlayer Management System - AUTO START  " -ForegroundColor Yellow -BackgroundColor DarkBlue
Write-Host "================================================================================================" -ForegroundColor Cyan
Write-Host ""

$ErrorActionPreference = "Continue"

# –ü—É—Ç–∏
$ServerPath = "C:\Users\dimas\Documents\Remote\LDPlayerManagementSystem\Server"
$FrontendPath = "C:\Users\dimas\Documents\Remote\LDPlayerManagementSystem\frontend"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—É—Ç–µ–π
if (-not (Test-Path $ServerPath)) {
    Write-Host "‚ùå ERROR: Server directory not found!" -ForegroundColor Red
    Write-Host "   Path: $ServerPath" -ForegroundColor Yellow
    pause
    exit 1
}

if (-not (Test-Path $FrontendPath)) {
    Write-Host "‚ùå ERROR: Frontend directory not found!" -ForegroundColor Red
    Write-Host "   Path: $FrontendPath" -ForegroundColor Yellow
    pause
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Python
try {
    $pythonVersion = python --version 2>&1
    Write-Host "‚úÖ Python found: $pythonVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå ERROR: Python not found!" -ForegroundColor Red
    Write-Host "   Install Python 3.13+ from python.org" -ForegroundColor Yellow
    pause
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Node.js
try {
    $nodeVersion = node --version 2>&1
    Write-Host "‚úÖ Node.js found: $nodeVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå ERROR: Node.js not found!" -ForegroundColor Red
    Write-Host "   Install Node.js from nodejs.org" -ForegroundColor Yellow
    pause
    exit 1
}

Write-Host ""
Write-Host "üì¶ Starting Backend Server..." -ForegroundColor Yellow
Write-Host "   Location: $ServerPath" -ForegroundColor DarkGray
Write-Host "   Command: python run_dev_ui.py" -ForegroundColor DarkGray

# –ó–∞–ø—É—Å–∫ backend –≤ –Ω–æ–≤–æ–º –æ–∫–Ω–µ
Start-Process powershell -ArgumentList @(
    "-NoExit",
    "-Command",
    "cd '$ServerPath'; `$host.UI.RawUI.WindowTitle = 'üîß Backend Server (Port 8000)'; Write-Host 'üöÄ Backend Server Starting...' -ForegroundColor Cyan; python run_dev_ui.py"
)

Write-Host "‚úÖ Backend window opened" -ForegroundColor Green
Start-Sleep -Seconds 3

Write-Host ""
Write-Host "üé® Starting Frontend Server..." -ForegroundColor Yellow
Write-Host "   Location: $FrontendPath" -ForegroundColor DarkGray
Write-Host "   Command: npm run dev" -ForegroundColor DarkGray

# –ó–∞–ø—É—Å–∫ frontend –≤ –Ω–æ–≤–æ–º –æ–∫–Ω–µ
Start-Process powershell -ArgumentList @(
    "-NoExit",
    "-Command",
    "cd '$FrontendPath'; `$host.UI.RawUI.WindowTitle = 'üé® Frontend Server (Port 3000)'; Write-Host 'üöÄ Frontend Server Starting...' -ForegroundColor Cyan; npm run dev"
)

Write-Host "‚úÖ Frontend window opened" -ForegroundColor Green
Start-Sleep -Seconds 5

Write-Host ""
Write-Host "üåê Opening Web Browser..." -ForegroundColor Yellow
Start-Sleep -Seconds 3

# –û—Ç–∫—Ä—ã—Ç—å –±—Ä–∞—É–∑–µ—Ä
try {
    Start-Process "http://localhost:3000"
    Write-Host "‚úÖ Browser opened" -ForegroundColor Green
} catch {
    Write-Host "‚ö†Ô∏è  Could not open browser automatically" -ForegroundColor Yellow
    Write-Host "   Please open manually: http://localhost:3000" -ForegroundColor Cyan
}

Write-Host ""
Write-Host "================================================================================================" -ForegroundColor Cyan
Write-Host "  ‚úÖ SYSTEM STARTED SUCCESSFULLY!" -ForegroundColor Green -BackgroundColor DarkGreen
Write-Host "================================================================================================" -ForegroundColor Cyan
Write-Host ""
Write-Host "üìä Service URLs:" -ForegroundColor Yellow
Write-Host "   üéØ Web UI:      " -NoNewline -ForegroundColor White
Write-Host "http://localhost:3000" -ForegroundColor Cyan
Write-Host "   üì° Backend API: " -NoNewline -ForegroundColor White
Write-Host "http://localhost:8000" -ForegroundColor Cyan
Write-Host "   üìö Swagger Docs:" -NoNewline -ForegroundColor White
Write-Host "http://localhost:8000/docs" -ForegroundColor Cyan
Write-Host ""
Write-Host "üîê Default Credentials:" -ForegroundColor Yellow
Write-Host "   Username: " -NoNewline -ForegroundColor White
Write-Host "admin" -ForegroundColor Green
Write-Host "   Password: " -NoNewline -ForegroundColor White
Write-Host "admin123" -ForegroundColor Green
Write-Host ""
Write-Host "üí° Tips:" -ForegroundColor Yellow
Write-Host "   ‚Ä¢ Backend and Frontend are running in separate windows" -ForegroundColor Gray
Write-Host "   ‚Ä¢ Close those windows to stop the servers" -ForegroundColor Gray
Write-Host "   ‚Ä¢ Check backend window for server logs" -ForegroundColor Gray
Write-Host "   ‚Ä¢ Frontend has hot-reload enabled (auto-refresh on code changes)" -ForegroundColor Gray
Write-Host ""
Write-Host "Press any key to close this window..." -ForegroundColor DarkGray
$null = $Host.UI.RawUI.ReadKey("NoEcho,IncludeKeyDown")
